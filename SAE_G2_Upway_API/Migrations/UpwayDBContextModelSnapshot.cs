// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SAE_G2_Upway_API.Models.EntityFramework;

#nullable disable

namespace SAE_G2_Upway_API.Migrations
{
    [DbContext(typeof(UpwayDBContext))]
    partial class UpwayDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("upway")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.A_Pour_Photo", b =>
                {
                    b.Property<int>("Idapourphoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("appto_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idapourphoto"));

                    b.Property<int>("IdPhoto")
                        .HasColumnType("integer")
                        .HasColumnName("pto_id");

                    b.Property<int>("IdProduit")
                        .HasColumnType("integer")
                        .HasColumnName("pdt_id");

                    b.HasKey("Idapourphoto");

                    b.HasIndex("IdPhoto")
                        .IsUnique();

                    b.HasIndex("IdProduit");

                    b.ToTable("t_j_apourphoto_appto", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Accessoire", b =>
                {
                    b.Property<int>("IdAccessoire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("acce_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAccessoire"));

                    b.Property<DateTime>("DateAccessoire")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("acce_date");

                    b.Property<int>("IdCatA")
                        .HasColumnType("integer")
                        .HasColumnName("cata_id");

                    b.Property<int>("IdProduit")
                        .HasColumnType("integer")
                        .HasColumnName("pdt_id");

                    b.HasKey("IdAccessoire")
                        .HasName("PK_Accessoire");

                    b.HasIndex("IdCatA");

                    b.HasIndex("IdProduit")
                        .IsUnique();

                    b.ToTable("t_e_accessoire_acce", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Adresse", b =>
                {
                    b.Property<int>("IdAdresse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAdresse"));

                    b.Property<int>("Cp")
                        .HasColumnType("integer")
                        .HasColumnName("adr_cp");

                    b.Property<int>("PaysId")
                        .HasColumnType("integer")
                        .HasColumnName("pays_id");

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("adr_rue");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("adr_ville");

                    b.HasKey("IdAdresse")
                        .HasName("PK_Adresse");

                    b.HasIndex("PaysId");

                    b.ToTable("t_e_adresse_adr", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Alerte", b =>
                {
                    b.Property<int>("IdAlerte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("alt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAlerte"));

                    b.Property<int>("Budgetmax")
                        .HasColumnType("integer")
                        .HasColumnName("alt_budgetmax");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("alt_email");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<int>("IdTaille")
                        .HasColumnType("integer")
                        .HasColumnName("tle_id");

                    b.HasKey("IdAlerte")
                        .HasName("PK_Alerte");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdTaille");

                    b.ToTable("t_e_alerte_alt", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Assurance", b =>
                {
                    b.Property<int>("IdAssurance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("assur_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAssurance"));

                    b.Property<string>("NomAssurance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("assur_nom");

                    b.Property<decimal>("PrixAssurance")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("assur_prix");

                    b.HasKey("IdAssurance")
                        .HasName("PK_Assurance");

                    b.ToTable("t_e_assurance_assur", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Boutique", b =>
                {
                    b.Property<int>("IdBoutique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("btq_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdBoutique"));

                    b.Property<int>("IdAdresse")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<string>("NomBoutique")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("btq_nom");

                    b.HasKey("IdBoutique")
                        .HasName("PK_Boutique");

                    b.HasIndex("IdAdresse")
                        .IsUnique();

                    b.ToTable("t_e_boutique_btq", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Caracteristique", b =>
                {
                    b.Property<int>("IdCaract")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("caract_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCaract"));

                    b.Property<int>("IdSousCat")
                        .HasColumnType("integer")
                        .HasColumnName("scat_id");

                    b.Property<string>("Typecaract")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("caract_type");

                    b.HasKey("IdCaract")
                        .HasName("PK_Caracteristique");

                    b.HasIndex("IdSousCat");

                    b.ToTable("t_e_caracteristique_caract", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.CategorieAccessoire", b =>
                {
                    b.Property<int>("IdCatA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cata_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCatA"));

                    b.Property<string>("NomCatA")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("cata_nom");

                    b.HasKey("IdCatA")
                        .HasName("PK_CategorieAccessoire");

                    b.ToTable("t_e_categorieaccessoire_cata", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.CategorieVelo", b =>
                {
                    b.Property<int>("IdCat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("catv_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCat"));

                    b.Property<string>("NomCategorie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("catv_nom");

                    b.HasKey("IdCat")
                        .HasName("PK_CategorieVelo");

                    b.ToTable("t_e_categorievelo_catv", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Client", b =>
                {
                    b.Property<int>("Idclient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idclient"));

                    b.Property<int>("IdFonction")
                        .HasColumnType("integer")
                        .HasColumnName("fn_id");

                    b.Property<string>("Mailclient")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("clt_mail");

                    b.Property<string>("Nomclient")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("clt_nom");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("clt_password");

                    b.Property<string>("Prenomclient")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("clt_prenom");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("clt_telephone");

                    b.Property<string>("UserRole")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasDefaultValue("User")
                        .HasColumnName("clt_userrole");

                    b.HasKey("Idclient")
                        .HasName("PK_Client");

                    b.HasIndex("IdFonction");

                    b.ToTable("t_e_client_clt", "upway", t =>
                        {
                            t.HasCheckConstraint("chk_mailclient_format", "clt_mail ~* '^[A-Za-z0-9._%-+]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,3}$'");
                        });
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.CodeReduc", b =>
                {
                    b.Property<int>("Idcode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("codred_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idcode"));

                    b.Property<string>("Libellecode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("codred_libelle");

                    b.HasKey("Idcode")
                        .HasName("PK_CodeReduc");

                    b.ToTable("t_e_codereduc_codred", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Commande", b =>
                {
                    b.Property<int>("IdCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("comm_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCommande"));

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("comm_date");

                    b.Property<int>("IdAdresse")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<int?>("IdAdresseFactu")
                        .HasColumnType("integer")
                        .HasColumnName("adr_idfactu");

                    b.Property<int?>("IdBoutique")
                        .HasColumnType("integer")
                        .HasColumnName("btq_id");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<int?>("IdCode")
                        .HasColumnType("integer")
                        .HasColumnName("codred_id");

                    b.Property<int>("IdModeExp")
                        .HasColumnType("integer")
                        .HasColumnName("modexpe_id");

                    b.Property<int>("IdModePayement")
                        .HasColumnType("integer")
                        .HasColumnName("mpay_id");

                    b.Property<int>("IdStatut")
                        .HasColumnType("integer")
                        .HasColumnName("stu_id");

                    b.HasKey("IdCommande")
                        .HasName("PK_Commande");

                    b.HasIndex("IdAdresse");

                    b.HasIndex("IdAdresseFactu");

                    b.HasIndex("IdBoutique");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdCode");

                    b.HasIndex("IdModeExp");

                    b.HasIndex("IdModePayement");

                    b.HasIndex("IdStatut");

                    b.ToTable("t_e_commande_comm", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Concerne", b =>
                {
                    b.Property<int>("IdConcerne")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("crn_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdConcerne"));

                    b.Property<int?>("IdAlerte")
                        .HasColumnType("integer")
                        .HasColumnName("alt_id");

                    b.Property<int>("IdCat")
                        .HasColumnType("integer")
                        .HasColumnName("catv_id");

                    b.HasKey("IdConcerne");

                    b.HasIndex("IdAlerte");

                    b.HasIndex("IdCat");

                    b.ToTable("t_j_concerne_crn", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Contient", b =>
                {
                    b.Property<int>("IdContient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ctn_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdContient"));

                    b.Property<int>("IdSoustype")
                        .HasColumnType("integer")
                        .HasColumnName("styp_id");

                    b.Property<int>("IdType")
                        .HasColumnType("integer")
                        .HasColumnName("typ_id");

                    b.HasKey("IdContient");

                    b.HasIndex("IdSoustype");

                    b.HasIndex("IdType");

                    b.ToTable("t_j_contient_ctn", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_Caracterise", b =>
                {
                    b.Property<int>("IdestCaracterise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("estcaract_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdestCaracterise"));

                    b.Property<int>("IdCaract")
                        .HasColumnType("integer")
                        .HasColumnName("caract_id");

                    b.Property<int>("IdVelo")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.Property<string>("ValeurCaracteristique")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("estcaract_valeurcaracteristique");

                    b.HasKey("IdestCaracterise");

                    b.HasIndex("IdCaract");

                    b.HasIndex("IdVelo");

                    b.ToTable("t_e_estcaracterise_estcaract", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_Compose", b =>
                {
                    b.Property<int>("IdCompose")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("estcomp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCompose"));

                    b.Property<int>("IdMoteur")
                        .HasColumnType("integer")
                        .HasColumnName("mtr_id");

                    b.Property<int>("IdVelo")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.HasKey("IdCompose");

                    b.HasIndex("IdMoteur");

                    b.HasIndex("IdVelo");

                    b.ToTable("t_j_estcompose_estcomp", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_De_ModeleM", b =>
                {
                    b.Property<int>("EstDeModeleM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("edmdlm_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EstDeModeleM"));

                    b.Property<int>("IdModele")
                        .HasColumnType("integer")
                        .HasColumnName("mdl_id");

                    b.Property<int>("IdMoteur")
                        .HasColumnType("integer")
                        .HasColumnName("mtr_id");

                    b.HasKey("EstDeModeleM");

                    b.HasIndex("IdModele");

                    b.HasIndex("IdMoteur");

                    b.ToTable("t_j_estdemodelem_edmdlm", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_En_Favoris", b =>
                {
                    b.Property<int>("IdEstEnFavoris")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("eefav_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstEnFavoris"));

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<int>("IdProduit")
                        .HasColumnType("integer")
                        .HasColumnName("pdt_id");

                    b.HasKey("IdEstEnFavoris");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdProduit");

                    b.ToTable("t_j_estenfavoris_eefav", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_Mis_Panier_Accessoire", b =>
                {
                    b.Property<int>("IdEstProposeSimilaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("empanacc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstProposeSimilaire"));

                    b.Property<int>("IdAccessoire")
                        .HasColumnType("integer")
                        .HasColumnName("acce_id");

                    b.Property<int>("IdCommande")
                        .HasColumnType("integer")
                        .HasColumnName("comm_id");

                    b.Property<int>("Quantite")
                        .HasColumnType("integer")
                        .HasColumnName("empanacc_quantite");

                    b.HasKey("IdEstProposeSimilaire");

                    b.HasIndex("IdAccessoire");

                    b.HasIndex("IdCommande");

                    b.ToTable("t_j_estmispanieraccessoire_empanacc", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_Mis_Panier_Velo", b =>
                {
                    b.Property<int>("IdPanierVelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("empanvel_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPanierVelo"));

                    b.Property<int>("IdCommande")
                        .HasColumnType("integer")
                        .HasColumnName("comm_id");

                    b.Property<int>("IdVelo")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.HasKey("IdPanierVelo");

                    b.HasIndex("IdCommande");

                    b.HasIndex("IdVelo");

                    b.ToTable("t_j_estmispaniervelo_empanvel", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_Propose_Similaire", b =>
                {
                    b.Property<int>("IdEstProposeSimilaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("estpropsim_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstProposeSimilaire"));

                    b.Property<int>("IdAccessoire")
                        .HasColumnType("integer")
                        .HasColumnName("acce_id");

                    b.Property<int>("IdCommande")
                        .HasColumnType("integer")
                        .HasColumnName("comm_id");

                    b.HasKey("IdEstProposeSimilaire");

                    b.HasIndex("IdAccessoire");

                    b.HasIndex("IdCommande");

                    b.ToTable("t_j_estproposesimilaire_estpropsim", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Etat", b =>
                {
                    b.Property<int>("IdEtat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("eta_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEtat"));

                    b.Property<string>("NomEtat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("eta_nom");

                    b.HasKey("IdEtat")
                        .HasName("PK_Etat");

                    b.ToTable("t_e_etat_eta", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Fonction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("fn_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomFonction")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("fn_nom");

                    b.HasKey("Id")
                        .HasName("PK_Fonction");

                    b.ToTable("t_e_fonction_fn", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Habite", b =>
                {
                    b.Property<int>("Idhabite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("hab_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idhabite"));

                    b.Property<int>("Idadresse")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<int?>("Idclient")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.HasKey("Idhabite");

                    b.HasIndex("Idadresse");

                    b.HasIndex("Idclient");

                    b.ToTable("t_j_habite_hab", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Marque", b =>
                {
                    b.Property<int>("IdMarque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mrq_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMarque"));

                    b.Property<string>("NomMarque")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("mrq_nom");

                    b.HasKey("IdMarque")
                        .HasName("PK_Marque");

                    b.ToTable("t_e_marque_mrq", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.ModeExpedition", b =>
                {
                    b.Property<int>("IdModeExp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("modexpe_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdModeExp"));

                    b.Property<string>("LibellemodeExp")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("modexpe_libelle");

                    b.HasKey("IdModeExp")
                        .HasName("PK_ModeExpedition");

                    b.ToTable("t_e_modeexpedition_modexpe", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.ModePayement", b =>
                {
                    b.Property<int>("Idmodepayement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mpay_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idmodepayement"));

                    b.Property<string>("NomModepayement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("mpay_nom");

                    b.HasKey("Idmodepayement")
                        .HasName("PK_ModePayement");

                    b.ToTable("t_e_modepayement_mpay", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Modele", b =>
                {
                    b.Property<int>("IdModele")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mdl_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdModele"));

                    b.Property<int>("IdMarque")
                        .HasColumnType("integer")
                        .HasColumnName("mrq_id");

                    b.Property<int?>("MarqueIdMarque")
                        .HasColumnType("integer");

                    b.Property<string>("NomModele")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("mdl_nom");

                    b.HasKey("IdModele");

                    b.HasIndex("IdMarque");

                    b.HasIndex("MarqueIdMarque");

                    b.ToTable("t_e_modele_mdl", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Moteur", b =>
                {
                    b.Property<int>("IdMoteur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mtr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMoteur"));

                    b.Property<int>("CoupleMoteur")
                        .HasColumnType("integer")
                        .HasColumnName("mtr_couple");

                    b.Property<string>("Positionmoteur")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("mtr_position");

                    b.Property<int>("VitesseMax")
                        .HasColumnType("integer")
                        .HasColumnName("mtr_vitessemax");

                    b.HasKey("IdMoteur")
                        .HasName("PK_Moteur");

                    b.ToTable("t_e_moteur_mtr", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Pays", b =>
                {
                    b.Property<int>("IdPays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pays_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPays"));

                    b.Property<string>("NomPays")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("pays_nom");

                    b.HasKey("IdPays")
                        .HasName("PK_Pays");

                    b.ToTable("t_e_pays_pays", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Peut_Etre_Teste", b =>
                {
                    b.Property<int>("IdTest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("petest_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTest"));

                    b.Property<int>("IdBoutique")
                        .HasColumnType("integer")
                        .HasColumnName("btq_id");

                    b.Property<int>("IdVelo")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.HasKey("IdTest");

                    b.HasIndex("IdBoutique");

                    b.HasIndex("IdVelo");

                    b.ToTable("t_j_peutetreteste_petest", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Photo", b =>
                {
                    b.Property<int>("IdPhoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pto_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPhoto"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("pto_description");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("pto_url");

                    b.HasKey("IdPhoto")
                        .HasName("PK_Photo");

                    b.ToTable("t_e_photo_pto", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Possede", b =>
                {
                    b.Property<int>("IdPossede")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("poss_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPossede"));

                    b.Property<int>("IdSousCat")
                        .HasColumnType("integer")
                        .HasColumnName("scat_id");

                    b.Property<int>("IdVelo")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.HasKey("IdPossede");

                    b.HasIndex("IdSousCat");

                    b.HasIndex("IdVelo");

                    b.ToTable("t_j_possede_poss", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Produit", b =>
                {
                    b.Property<int>("Idproduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pdt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idproduit"));

                    b.Property<string>("DescriptionProduit")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("pdt_description");

                    b.Property<int>("IdMarque")
                        .HasColumnType("integer")
                        .HasColumnName("mrq_id");

                    b.Property<int>("IdPhoto")
                        .HasColumnType("integer")
                        .HasColumnName("pto_id");

                    b.Property<string>("NomProduit")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("pdt_nom");

                    b.Property<double>("PrixProduit")
                        .HasColumnType("double precision")
                        .HasColumnName("pdt_prix");

                    b.Property<int>("StockProduit")
                        .HasColumnType("integer")
                        .HasColumnName("pdt_stock");

                    b.HasKey("Idproduit")
                        .HasName("PK_Produit");

                    b.HasIndex("IdMarque");

                    b.HasIndex("IdPhoto")
                        .IsUnique();

                    b.ToTable("t_e_produit_pdt", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Propose_Assur", b =>
                {
                    b.Property<int>("IdProposeAssur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("propassur_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProposeAssur"));

                    b.Property<int>("IdAssurance")
                        .HasColumnType("integer")
                        .HasColumnName("assur_id");

                    b.Property<int>("IdCommande")
                        .HasColumnType("integer")
                        .HasColumnName("comm_id");

                    b.HasKey("IdProposeAssur");

                    b.HasIndex("IdAssurance");

                    b.HasIndex("IdCommande");

                    b.ToTable("t_j_proposeassur_propassur", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.RapportInspection", b =>
                {
                    b.Property<int>("IdRapport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rapinsp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRapport"));

                    b.Property<string>("Centre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("rapinsp_centre");

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("rapinsp_commentaire");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("rapinsp_date");

                    b.Property<string>("Historique")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("rapinsp_historique");

                    b.Property<int>("IdVelo")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.HasKey("IdRapport");

                    b.HasIndex("IdVelo")
                        .IsUnique();

                    b.ToTable("t_e_rapportinspection_rapinsp", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.SousCategorie", b =>
                {
                    b.Property<int>("IdSousCat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("scat_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSousCat"));

                    b.Property<string>("TypeSousCat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("scat_type");

                    b.HasKey("IdSousCat");

                    b.ToTable("t_e_souscategorie_scat", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.SousType", b =>
                {
                    b.Property<int>("IdSousType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("styp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSousType"));

                    b.Property<string>("LibelleSousType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("styp_libelle");

                    b.HasKey("IdSousType");

                    b.ToTable("t_e_soustype_styp", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Statut", b =>
                {
                    b.Property<int>("IdStatut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("stu_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdStatut"));

                    b.Property<string>("NomStatut")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("stu_nom");

                    b.HasKey("IdStatut")
                        .HasName("PK_Statut");

                    b.ToTable("t_e_statut_stu", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.SurType", b =>
                {
                    b.Property<int>("IdSurType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("srtyp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSurType"));

                    b.Property<bool>("Checke")
                        .HasColumnType("boolean")
                        .HasColumnName("srtyp_checke");

                    b.Property<int>("IdSousType")
                        .HasColumnType("integer")
                        .HasColumnName("styp_id");

                    b.Property<string>("LibelleSurType")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("srtyp_libelle");

                    b.Property<bool>("Repare")
                        .HasColumnType("boolean")
                        .HasColumnName("srtyp_repare");

                    b.HasKey("IdSurType");

                    b.HasIndex("IdSousType");

                    b.ToTable("t_e_surtype_srtyp", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Taille", b =>
                {
                    b.Property<int>("Idtaille")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tle_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idtaille"));

                    b.Property<int>("TailleCm")
                        .HasColumnType("integer")
                        .HasColumnName("tle_taillecm");

                    b.HasKey("Idtaille")
                        .HasName("PK_Taille");

                    b.ToTable("t_e_taille_tle", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Type", b =>
                {
                    b.Property<int>("Idtype")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("typ_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idtype"));

                    b.Property<string>("NomType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("typ_nom");

                    b.HasKey("Idtype")
                        .HasName("PK_Type");

                    b.ToTable("t_e_type_typ", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Valide", b =>
                {
                    b.Property<int>("IdValide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("val_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdValide"));

                    b.Property<int>("IdRapport")
                        .HasColumnType("integer")
                        .HasColumnName("rapinsp_id");

                    b.Property<int>("IdType")
                        .HasColumnType("integer")
                        .HasColumnName("typ_id");

                    b.HasKey("IdValide");

                    b.HasIndex("IdRapport");

                    b.HasIndex("IdType");

                    b.ToTable("t_j_valide_val", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Velo", b =>
                {
                    b.Property<int>("IdVelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdVelo"));

                    b.Property<DateTime>("Annee")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("vel_annee");

                    b.Property<bool>("BestSeller")
                        .HasColumnType("boolean")
                        .HasColumnName("vel_bestseller");

                    b.Property<int>("IdCat")
                        .HasColumnType("integer")
                        .HasColumnName("catv_id");

                    b.Property<int>("IdEtat")
                        .HasColumnType("integer")
                        .HasColumnName("eta_id");

                    b.Property<int>("IdModele")
                        .HasColumnType("integer")
                        .HasColumnName("mdl_id");

                    b.Property<int>("IdProduit")
                        .HasColumnType("integer")
                        .HasColumnName("pdt_id");

                    b.Property<int>("IdTailleMax")
                        .HasColumnType("integer")
                        .HasColumnName("tle_idtaillemax");

                    b.Property<int>("IdTailleMin")
                        .HasColumnType("integer")
                        .HasColumnName("tle_idtaillemin");

                    b.Property<int>("NbVente")
                        .HasColumnType("integer")
                        .HasColumnName("vel_nbvente");

                    b.Property<double>("Nbkms")
                        .HasColumnType("double precision")
                        .HasColumnName("vel_nbkms");

                    b.Property<double>("Poids")
                        .HasColumnType("double precision")
                        .HasColumnName("vel_poids");

                    b.Property<double>("Prixneuf")
                        .HasColumnType("double precision")
                        .HasColumnName("vel_prixneuf");

                    b.Property<string>("QualiteVelo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("vel_qualitevelo");

                    b.Property<string>("Typecadre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("vel_typecadre");

                    b.HasKey("IdVelo")
                        .HasName("PK_Velo");

                    b.HasIndex("IdCat");

                    b.HasIndex("IdEtat");

                    b.HasIndex("IdModele");

                    b.HasIndex("IdProduit")
                        .IsUnique();

                    b.HasIndex("IdTailleMax");

                    b.HasIndex("IdTailleMin");

                    b.ToTable("t_e_velo_vel", "upway");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.A_Pour_Photo", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Photo", "Photo")
                        .WithOne("AProduit")
                        .HasForeignKey("SAE_G2_Upway_API.Models.EntityFramework.A_Pour_Photo", "IdPhoto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Photo_A_Pour_Photo");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Produit", "ProduitAPhoto")
                        .WithMany("APhotos")
                        .HasForeignKey("IdProduit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Produit_A_Pour_Photo");

                    b.Navigation("Photo");

                    b.Navigation("ProduitAPhoto");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Accessoire", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.CategorieAccessoire", "CategorieAccessoire")
                        .WithMany("Accessoires")
                        .HasForeignKey("IdCatA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CategorieAccessoire_Accessoire");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Produit", "Produit")
                        .WithOne("Accessoire")
                        .HasForeignKey("SAE_G2_Upway_API.Models.EntityFramework.Accessoire", "IdProduit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Produit_Accessoire");

                    b.Navigation("CategorieAccessoire");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Adresse", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Pays", "Pays")
                        .WithMany("Adresses")
                        .HasForeignKey("PaysId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Pays_Adresse");

                    b.Navigation("Pays");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Alerte", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Client", "Client")
                        .WithMany("Alertes")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Alerte_Client");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Taille", "Taille")
                        .WithMany("Alerte")
                        .HasForeignKey("IdTaille")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Taille_Alerte");

                    b.Navigation("Client");

                    b.Navigation("Taille");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Boutique", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Adresse", "Adresse")
                        .WithOne("Boutique")
                        .HasForeignKey("SAE_G2_Upway_API.Models.EntityFramework.Boutique", "IdAdresse")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Boutique_Adresse");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Caracteristique", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.SousCategorie", "SousCategorie")
                        .WithMany("Caracteristiques")
                        .HasForeignKey("IdSousCat")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Caracteristique_SousCategorie");

                    b.Navigation("SousCategorie");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Client", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Fonction", "Fonction")
                        .WithMany("Clients")
                        .HasForeignKey("IdFonction")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Fonction_Client");

                    b.Navigation("Fonction");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Commande", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Adresse", "Adresse")
                        .WithMany("Commandes")
                        .HasForeignKey("IdAdresse")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Commande_Adresse");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Adresse", "AdresseFactu")
                        .WithMany("CommandesFactu")
                        .HasForeignKey("IdAdresseFactu")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Commande_AdresseFactu");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Boutique", "Boutique")
                        .WithMany("Commandes")
                        .HasForeignKey("IdBoutique")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Boutique_Commande");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Client", "Client")
                        .WithMany("Commandes")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Commande_Client");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.CodeReduc", "Code")
                        .WithMany("Commandes")
                        .HasForeignKey("IdCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_CodeReduc_Commande");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.ModeExpedition", "ModeExpedition")
                        .WithMany("Commandes")
                        .HasForeignKey("IdModeExp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ModeExpedition_Commande");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.ModePayement", "ModePayement")
                        .WithMany("Commandes")
                        .HasForeignKey("IdModePayement")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ModePayement_Commande");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Statut", "Statut")
                        .WithMany("Commandes")
                        .HasForeignKey("IdStatut")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Statut_Commande");

                    b.Navigation("Adresse");

                    b.Navigation("AdresseFactu");

                    b.Navigation("Boutique");

                    b.Navigation("Client");

                    b.Navigation("Code");

                    b.Navigation("ModeExpedition");

                    b.Navigation("ModePayement");

                    b.Navigation("Statut");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Concerne", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Alerte", "ConcerneAlerte")
                        .WithMany("EstConcerneCategorie")
                        .HasForeignKey("IdAlerte")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.CategorieVelo", "ConcerneCategorieVelo")
                        .WithMany("ConcerneAlerte")
                        .HasForeignKey("IdCat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategorieVelo_Concerne");

                    b.Navigation("ConcerneAlerte");

                    b.Navigation("ConcerneCategorieVelo");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Contient", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.SousType", "ContientSousType")
                        .WithMany("AType")
                        .HasForeignKey("IdSoustype")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Type", "ContientType")
                        .WithMany("ASousTypes")
                        .HasForeignKey("IdType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Type_Contient");

                    b.Navigation("ContientSousType");

                    b.Navigation("ContientType");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_Caracterise", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Caracteristique", "Caracterise")
                        .WithMany("CaracteriseVelo")
                        .HasForeignKey("IdCaract")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Velo", "CaracteriseVelo")
                        .WithMany("Caracteristiques")
                        .HasForeignKey("IdVelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caracterise");

                    b.Navigation("CaracteriseVelo");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_Compose", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Moteur", "LeMoteur")
                        .WithMany("LesVelos")
                        .HasForeignKey("IdMoteur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Moteur_Est_Compose");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Velo", "LeVelo")
                        .WithMany("LesMoteurs")
                        .HasForeignKey("IdVelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeMoteur");

                    b.Navigation("LeVelo");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_De_ModeleM", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Modele", "LeModele")
                        .WithMany("LesMoteurs")
                        .HasForeignKey("IdModele")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Moteur", "LeMoteur")
                        .WithMany("LesModeles")
                        .HasForeignKey("IdMoteur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Moteur_Est_De_ModeleM");

                    b.Navigation("LeModele");

                    b.Navigation("LeMoteur");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_En_Favoris", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Client", "ClientFavoris")
                        .WithMany("LesFavoris")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Client_Est_En_Favoris");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Produit", "LesProduits")
                        .WithMany("DansLesFavoris")
                        .HasForeignKey("IdProduit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Produit_Est_En_Favoris");

                    b.Navigation("ClientFavoris");

                    b.Navigation("LesProduits");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_Mis_Panier_Accessoire", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Accessoire", "LAccessoire")
                        .WithMany("LesCommandesAccessoire")
                        .HasForeignKey("IdAccessoire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Commande", "LaCommande")
                        .WithMany("LesAccessoires")
                        .HasForeignKey("IdCommande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LAccessoire");

                    b.Navigation("LaCommande");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_Mis_Panier_Velo", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Commande", "PanierCommande")
                        .WithMany("PanierVelo")
                        .HasForeignKey("IdCommande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Velo", "PanierVelo")
                        .WithMany("ACommandes")
                        .HasForeignKey("IdVelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PanierCommande");

                    b.Navigation("PanierVelo");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Est_Propose_Similaire", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Accessoire", "LAccessoire")
                        .WithMany("LesCommandes")
                        .HasForeignKey("IdAccessoire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Commande", "LaCommande")
                        .WithMany("LesSimilaires")
                        .HasForeignKey("IdCommande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LAccessoire");

                    b.Navigation("LaCommande");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Habite", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Adresse", "AdresseHabite")
                        .WithMany("AClients")
                        .HasForeignKey("Idadresse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Client", "ClientHabite")
                        .WithMany("HabiteA")
                        .HasForeignKey("Idclient")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("AdresseHabite");

                    b.Navigation("ClientHabite");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Modele", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Marque", "Marque")
                        .WithMany()
                        .HasForeignKey("IdMarque")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Marque_Modele");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Marque", null)
                        .WithMany("Modeles")
                        .HasForeignKey("MarqueIdMarque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Peut_Etre_Teste", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Boutique", "LaBoutique")
                        .WithMany("LesVelos")
                        .HasForeignKey("IdBoutique")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Velo", "LeVelo")
                        .WithMany("LesBoutiques")
                        .HasForeignKey("IdVelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaBoutique");

                    b.Navigation("LeVelo");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Possede", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.SousCategorie", "LaSousCategorie")
                        .WithMany("LesVelos")
                        .HasForeignKey("IdSousCat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Velo", "LeVelo")
                        .WithMany("LesSousCategories")
                        .HasForeignKey("IdVelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaSousCategorie");

                    b.Navigation("LeVelo");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Produit", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Marque", "Marque")
                        .WithMany("Produits")
                        .HasForeignKey("IdMarque")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Marque_Produit");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Photo", "Photo")
                        .WithOne("Produit")
                        .HasForeignKey("SAE_G2_Upway_API.Models.EntityFramework.Produit", "IdPhoto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Photo_Produit");

                    b.Navigation("Marque");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Propose_Assur", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Assurance", "Assurance")
                        .WithMany("AssureCommande")
                        .HasForeignKey("IdAssurance")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Commande", "Commande")
                        .WithMany("AssurancesPropose")
                        .HasForeignKey("IdCommande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assurance");

                    b.Navigation("Commande");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.RapportInspection", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Velo", "LeVelo")
                        .WithOne("RapportInspection")
                        .HasForeignKey("SAE_G2_Upway_API.Models.EntityFramework.RapportInspection", "IdVelo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Velo_RapportInspection");

                    b.Navigation("LeVelo");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.SurType", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.SousType", "LeSousType")
                        .WithMany("LesSurTypes")
                        .HasForeignKey("IdSousType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeSousType");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Valide", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.RapportInspection", "LeRapport")
                        .WithMany("LesTypes")
                        .HasForeignKey("IdRapport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Type", "LeType")
                        .WithMany("LesRapports")
                        .HasForeignKey("IdType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Type_Valide");

                    b.Navigation("LeRapport");

                    b.Navigation("LeType");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Velo", b =>
                {
                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.CategorieVelo", "LaCategorie")
                        .WithMany("Velos")
                        .HasForeignKey("IdCat")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CategorieVelo_Velo");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Etat", "Etat")
                        .WithMany("Velos")
                        .HasForeignKey("IdEtat")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Etat_Velo");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Modele", "LeModele")
                        .WithMany("Velos")
                        .HasForeignKey("IdModele")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Velo_Modele");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Produit", "Produit")
                        .WithOne("Velo")
                        .HasForeignKey("SAE_G2_Upway_API.Models.EntityFramework.Velo", "IdProduit")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Velo_Produit");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Taille", "TailleMax")
                        .WithMany("VelosMax")
                        .HasForeignKey("IdTailleMax")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Taille_Velo_Max");

                    b.HasOne("SAE_G2_Upway_API.Models.EntityFramework.Taille", "TailleMin")
                        .WithMany("VelosMin")
                        .HasForeignKey("IdTailleMin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Taille_Velo_Min");

                    b.Navigation("Etat");

                    b.Navigation("LaCategorie");

                    b.Navigation("LeModele");

                    b.Navigation("Produit");

                    b.Navigation("TailleMax");

                    b.Navigation("TailleMin");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Accessoire", b =>
                {
                    b.Navigation("LesCommandes");

                    b.Navigation("LesCommandesAccessoire");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Adresse", b =>
                {
                    b.Navigation("AClients");

                    b.Navigation("Boutique");

                    b.Navigation("Commandes");

                    b.Navigation("CommandesFactu");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Alerte", b =>
                {
                    b.Navigation("EstConcerneCategorie");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Assurance", b =>
                {
                    b.Navigation("AssureCommande");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Boutique", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("LesVelos");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Caracteristique", b =>
                {
                    b.Navigation("CaracteriseVelo");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.CategorieAccessoire", b =>
                {
                    b.Navigation("Accessoires");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.CategorieVelo", b =>
                {
                    b.Navigation("ConcerneAlerte");

                    b.Navigation("Velos");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Client", b =>
                {
                    b.Navigation("Alertes");

                    b.Navigation("Commandes");

                    b.Navigation("HabiteA");

                    b.Navigation("LesFavoris");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.CodeReduc", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Commande", b =>
                {
                    b.Navigation("AssurancesPropose");

                    b.Navigation("LesAccessoires");

                    b.Navigation("LesSimilaires");

                    b.Navigation("PanierVelo");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Etat", b =>
                {
                    b.Navigation("Velos");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Fonction", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Marque", b =>
                {
                    b.Navigation("Modeles");

                    b.Navigation("Produits");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.ModeExpedition", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.ModePayement", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Modele", b =>
                {
                    b.Navigation("LesMoteurs");

                    b.Navigation("Velos");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Moteur", b =>
                {
                    b.Navigation("LesModeles");

                    b.Navigation("LesVelos");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Pays", b =>
                {
                    b.Navigation("Adresses");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Photo", b =>
                {
                    b.Navigation("AProduit")
                        .IsRequired();

                    b.Navigation("Produit")
                        .IsRequired();
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Produit", b =>
                {
                    b.Navigation("APhotos");

                    b.Navigation("Accessoire");

                    b.Navigation("DansLesFavoris");

                    b.Navigation("Velo");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.RapportInspection", b =>
                {
                    b.Navigation("LesTypes");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.SousCategorie", b =>
                {
                    b.Navigation("Caracteristiques");

                    b.Navigation("LesVelos");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.SousType", b =>
                {
                    b.Navigation("AType");

                    b.Navigation("LesSurTypes");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Statut", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Taille", b =>
                {
                    b.Navigation("Alerte");

                    b.Navigation("VelosMax");

                    b.Navigation("VelosMin");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Type", b =>
                {
                    b.Navigation("ASousTypes");

                    b.Navigation("LesRapports");
                });

            modelBuilder.Entity("SAE_G2_Upway_API.Models.EntityFramework.Velo", b =>
                {
                    b.Navigation("ACommandes");

                    b.Navigation("Caracteristiques");

                    b.Navigation("LesBoutiques");

                    b.Navigation("LesMoteurs");

                    b.Navigation("LesSousCategories");

                    b.Navigation("RapportInspection")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
